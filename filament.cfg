[gcode_macro BEEP]
gcode:
    {% set TONE = params.TONE|default(840)|int %}
    {% set VOLUME = params.VOLUME|default(80)|int %} ; volume % [0..100]
    {% set DURATION = params.DURATION|default(100)|int %} ; 100ms
    {% set REPETITIONS = params.REPETITIONS|default(params.R | default(1))|int %} ; number of repetitions (R as alias)
    {% set DELAY = params.DELAY|default(100)|int %} ; delay between repetitions, in ms
    {% set PWM_MAX = params.PWM_MAX|default(0.8)|float %} ; pwm at max tone pitch (before performances decay)
    
    # input validation
    {% set IS_VALID = true %}
    
    {% if TONE < 0 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid tone value. Must be greather equal to zero") }
    {% endif %}    
    
    {% if VOLUME < 0 or VOLUME > 100 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid volume value. Must be between 0 and 100") }
    {% endif %}

    {% if PWM_MAX < 0 or PWM_MAX > 1 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid pwm max value. Must be between 0 and 1") }
    {% endif %}
    
    {% if DURATION <= 0 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid duration. Must be greather than zero") }
    {% endif %}  
    
    {% if DELAY <= 0 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid delay between repetitions. Must be greather than zero") }
    {% endif %}    

    {% if REPETITIONS < 0 %}
        {% set IS_VALID = false %}
        { action_respond_info("Invalid repetition number. Must be greather equal to zero") }
    {% endif %}
    
    # routine
    {% if IS_VALID %}
        {% for r in range(REPETITIONS) %}
            SET_PIN PIN=BEEPER VALUE={(((((((VOLUME, 100)|min),0)|max))) * PWM_MAX) | round()} {% if TONE > 0 %}CYCLE_TIME={1/TONE|int | round(4)}{% endif %}
            SLEEP MS={DURATION}
            SET_PIN PIN=BEEPER VALUE=0
            {% if not loop.last %}SLEEP MS={DELAY}{% endif %}
        {% endfor %}
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
   {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      SAVE_GCODE_STATE NAME=UNLOAD_state
      
      M83  E0                         ; set extruder to relative
      G1 E5 F450                     ; quick purge
      G1 E-4 F1800                   ; fast retract
      G1 E-16 F1200                  ; retract
      SLEEP MS=1000                  ; wait for filament to cool
      G1 E-10 F300                   ; slow retract purge
      G1 E-50 F1200                 ; fast retract all filament
      G1 E-50 F1200                 ; fast retract all filament
      G1 E-50 F1200                 ; fast retract all filament
      M117 Filament unloaded

      UPDATE_DELAYED_GCODE ID=SCHEDULE_CLEAR_SCREEN DURATION=5
      RESTORE_GCODE_STATE NAME=UNLOAD_state
   {% else %}
      { action_respond_info("Filament unloading disabled while printing!") }
   {% endif %}

   
[gcode_macro LOAD_FILAMENT]
gcode: |
   {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      SAVE_GCODE_STATE NAME=LOAD_state
      M117 Loading filament..
      M83 E0                         ; set extruder to relative
      G1 E50 F300                    ; load (multiple times to avoid length limit)
      G1 E50 F300
      G1 E50 F300
      G1 E-1 F300                    ; short retract
      M117 Filament loaded
      
      UPDATE_DELAYED_GCODE ID=SCHEDULE_CLEAR_SCREEN DURATION=5
      RESTORE_GCODE_STATE NAME=LOAD_state
   {% else %}
      { action_respond_info("Filament loading disabled while printing!") }
   {% endif %}
